#+STARTUP: showall 
#+STARTUP: hidestars
#+PROPERTY: header-args :tangle yes :exports code

* Emacs Configuration

This is my first attempt for actual [[https://en.wikipedia.org/wiki/Literate_programming][Literate Programming]].
The following org file (=~/.emacs.d/emacs-init.org=)
contains all the necessary configuration elisp code
to setup Emacs to my convenience.

To actually load it,
add the following lines
to your =~/.emacs.d/init.el= file:

#+name: init.el content to load the literate configuration
#+begin_src emacs-lisp :tangle no
;; Require org mode
(require 'org-install)
(require 'ob-tangle)

;; Load the custom configuration file
(org-babel-load-file "emacs-init.org"
#+end_src

** Required Packages

The packages of this installation
will be installed from the famous
[[http://melpa.org/][MELPA]] Package Repository.

To install packages from there,
the repositories URL
has to be configured:

#+name: MELPA configuration
#+begin_src emacs-lisp
(require 'package)
(setq package-user-dir "~/.emacs.d/elpa/")

(add-to-list 'package-archives
             '("melpa" .
               "http://melpa.milkbox.net/packages/"))

(package-initialize)
#+end_src

The following table
contains a list of all packages
that will be automatically installed
by this configuration on emacs boot:

#+name: packages
| Category | Package         | Description                                       |
|----------+-----------------+---------------------------------------------------|
| util     | magit           | Exceptional git integration                       |
| util     | undo-tree       | Better undo visualization and handling            |
| util     | helm            | Exceptional completion system                     |
| util     | helm-projectile | helm integration with projectile                  |
| theme    | solarized-theme | A very pleasing theme, gently to the stressed eye |

#+begin_src emacs-lisp :var package-entries=packages
(defun jakob-get-package-name (package-entry)
  (intern (cadr package-entry)))

(defun jakob-package-is-installed (package)
  (package-installed-p package))

(defun jakob-install-missing-package (package)
  (package-refresh-contents)
  (package-install package))

(defun jakob-install-missing-packages ()
  "Install all configured packages."
  (interactive)
  (mapc #'(lambda (package-entry)
            (let 
              ((package (jakob-get-package-name package-entry)))
              (unless (jakob-package-is-installed package)
                (jakob-install-missing-package package))))
        (cddr package-entries)))

(jakob-install-missing-packages)
#+end_src
** Generic GUI settings

The default Emacs GUI
is rather unappealing to the modern eye.
And since the editor
is focused on keyboard shortcuts
a sophisticated GUI interface is not needed

#+begin_src emacs-lisp
;; Turn off mouse interface early in startup to avoid momentary display
(when (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(when (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(when (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))

;; No splash screen please... jeez
(setq inhibit-startup-screen t)
#+end_src



#+begin_src emacs-lisp
(load-theme 'wombat)
#+end_src

